// Auto-generated file. Do not edit manually.
// Run 'nr generate:types' to regenerate.

/** Rule names from TypeScript ESLint recommended config. */
export type TSRecommendedRules =
	| "@typescript-eslint/ban-ts-comment"
	| "@typescript-eslint/no-array-constructor"
	| "@typescript-eslint/no-duplicate-enum-values"
	| "@typescript-eslint/no-empty-object-type"
	| "@typescript-eslint/no-explicit-any"
	| "@typescript-eslint/no-extra-non-null-assertion"
	| "@typescript-eslint/no-misused-new"
	| "@typescript-eslint/no-namespace"
	| "@typescript-eslint/no-non-null-asserted-optional-chain"
	| "@typescript-eslint/no-require-imports"
	| "@typescript-eslint/no-this-alias"
	| "@typescript-eslint/no-unnecessary-type-constraint"
	| "@typescript-eslint/no-unsafe-declaration-merging"
	| "@typescript-eslint/no-unsafe-function-type"
	| "@typescript-eslint/no-unused-expressions"
	| "@typescript-eslint/no-unused-vars"
	| "@typescript-eslint/no-wrapper-object-types"
	| "@typescript-eslint/prefer-as-const"
	| "@typescript-eslint/prefer-namespace-keyword"
	| "@typescript-eslint/triple-slash-reference";

/** Rule names from TypeScript ESLint recommendedTypeChecked config. */
export type TSRecommendedTypeCheckedRules =
	| "@typescript-eslint/await-thenable"
	| "@typescript-eslint/no-array-delete"
	| "@typescript-eslint/no-base-to-string"
	| "@typescript-eslint/no-duplicate-type-constituents"
	| "@typescript-eslint/no-floating-promises"
	| "@typescript-eslint/no-for-in-array"
	| "@typescript-eslint/no-implied-eval"
	| "@typescript-eslint/no-misused-promises"
	| "@typescript-eslint/no-redundant-type-constituents"
	| "@typescript-eslint/no-unnecessary-type-assertion"
	| "@typescript-eslint/no-unsafe-argument"
	| "@typescript-eslint/no-unsafe-assignment"
	| "@typescript-eslint/no-unsafe-call"
	| "@typescript-eslint/no-unsafe-enum-comparison"
	| "@typescript-eslint/no-unsafe-member-access"
	| "@typescript-eslint/no-unsafe-return"
	| "@typescript-eslint/no-unsafe-unary-minus"
	| "@typescript-eslint/only-throw-error"
	| "@typescript-eslint/prefer-promise-reject-errors"
	| "@typescript-eslint/require-await"
	| "@typescript-eslint/restrict-plus-operands"
	| "@typescript-eslint/restrict-template-expressions"
	| "@typescript-eslint/unbound-method";

/** Rule names from TypeScript ESLint strict config. */
export type TSStrictRules =
	| "@typescript-eslint/ban-ts-comment"
	| "@typescript-eslint/no-array-constructor"
	| "@typescript-eslint/no-duplicate-enum-values"
	| "@typescript-eslint/no-dynamic-delete"
	| "@typescript-eslint/no-empty-object-type"
	| "@typescript-eslint/no-explicit-any"
	| "@typescript-eslint/no-extra-non-null-assertion"
	| "@typescript-eslint/no-extraneous-class"
	| "@typescript-eslint/no-invalid-void-type"
	| "@typescript-eslint/no-misused-new"
	| "@typescript-eslint/no-namespace"
	| "@typescript-eslint/no-non-null-asserted-nullish-coalescing"
	| "@typescript-eslint/no-non-null-asserted-optional-chain"
	| "@typescript-eslint/no-non-null-assertion"
	| "@typescript-eslint/no-require-imports"
	| "@typescript-eslint/no-this-alias"
	| "@typescript-eslint/no-unnecessary-type-constraint"
	| "@typescript-eslint/no-unsafe-declaration-merging"
	| "@typescript-eslint/no-unsafe-function-type"
	| "@typescript-eslint/no-unused-expressions"
	| "@typescript-eslint/no-unused-vars"
	| "@typescript-eslint/no-useless-constructor"
	| "@typescript-eslint/no-wrapper-object-types"
	| "@typescript-eslint/prefer-as-const"
	| "@typescript-eslint/prefer-literal-enum-member"
	| "@typescript-eslint/prefer-namespace-keyword"
	| "@typescript-eslint/triple-slash-reference"
	| "@typescript-eslint/unified-signatures";

/** Rule names from TypeScript ESLint strictTypeChecked config. */
export type TSStrictTypeCheckedRules =
	| "@typescript-eslint/await-thenable"
	| "@typescript-eslint/no-array-delete"
	| "@typescript-eslint/no-base-to-string"
	| "@typescript-eslint/no-confusing-void-expression"
	| "@typescript-eslint/no-deprecated"
	| "@typescript-eslint/no-duplicate-type-constituents"
	| "@typescript-eslint/no-floating-promises"
	| "@typescript-eslint/no-for-in-array"
	| "@typescript-eslint/no-implied-eval"
	| "@typescript-eslint/no-meaningless-void-operator"
	| "@typescript-eslint/no-misused-promises"
	| "@typescript-eslint/no-misused-spread"
	| "@typescript-eslint/no-mixed-enums"
	| "@typescript-eslint/no-redundant-type-constituents"
	| "@typescript-eslint/no-unnecessary-boolean-literal-compare"
	| "@typescript-eslint/no-unnecessary-condition"
	| "@typescript-eslint/no-unnecessary-template-expression"
	| "@typescript-eslint/no-unnecessary-type-arguments"
	| "@typescript-eslint/no-unnecessary-type-assertion"
	| "@typescript-eslint/no-unnecessary-type-conversion"
	| "@typescript-eslint/no-unnecessary-type-parameters"
	| "@typescript-eslint/no-unsafe-argument"
	| "@typescript-eslint/no-unsafe-assignment"
	| "@typescript-eslint/no-unsafe-call"
	| "@typescript-eslint/no-unsafe-enum-comparison"
	| "@typescript-eslint/no-unsafe-member-access"
	| "@typescript-eslint/no-unsafe-return"
	| "@typescript-eslint/no-unsafe-unary-minus"
	| "@typescript-eslint/only-throw-error"
	| "@typescript-eslint/prefer-promise-reject-errors"
	| "@typescript-eslint/prefer-reduce-type-parameter"
	| "@typescript-eslint/prefer-return-this-type"
	| "@typescript-eslint/related-getter-setter-pairs"
	| "@typescript-eslint/require-await"
	| "@typescript-eslint/restrict-plus-operands"
	| "@typescript-eslint/restrict-template-expressions"
	| "@typescript-eslint/return-await"
	| "@typescript-eslint/unbound-method"
	| "@typescript-eslint/use-unknown-in-catch-callback-variable";

/** Rule names from TypeScript ESLint stylistic config. */
export type TSStylisticRules =
	| "@typescript-eslint/adjacent-overload-signatures"
	| "@typescript-eslint/array-type"
	| "@typescript-eslint/ban-tslint-comment"
	| "@typescript-eslint/class-literal-property-style"
	| "@typescript-eslint/consistent-generic-constructors"
	| "@typescript-eslint/consistent-indexed-object-style"
	| "@typescript-eslint/consistent-type-assertions"
	| "@typescript-eslint/consistent-type-definitions"
	| "@typescript-eslint/no-confusing-non-null-assertion"
	| "@typescript-eslint/no-empty-function"
	| "@typescript-eslint/no-inferrable-types"
	| "@typescript-eslint/prefer-for-of"
	| "@typescript-eslint/prefer-function-type";

/** Rule names from TypeScript ESLint stylisticTypeChecked config. */
export type TSStylisticTypeCheckedRules =
	| "@typescript-eslint/dot-notation"
	| "@typescript-eslint/non-nullable-type-assertion-style"
	| "@typescript-eslint/prefer-find"
	| "@typescript-eslint/prefer-includes"
	| "@typescript-eslint/prefer-nullish-coalescing"
	| "@typescript-eslint/prefer-optional-chain"
	| "@typescript-eslint/prefer-regexp-exec"
	| "@typescript-eslint/prefer-string-starts-ends-with";
